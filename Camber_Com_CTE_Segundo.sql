WITH Historicos AS (
    SELECT
        COD_IDENT_UNMET,
        DTH_ENTRD_EQPMT
    FROM
        ACECPGER_LTQ.HISTORICOS_UM
),
Producao AS (
    SELECT
        COD_IDENT_UNMET,
        COD_CAMP_LTQ
    FROM
        ACECPGER_LTQ.UNIDADES_METALICAS
),
HU AS (
    SELECT
        VP.COD_IDENT_UNMET AS UM,
        T2.DTH_ENTRD_EQPMT,
        VP.COD_TIPO_MEDID AS TIPO,
        VP.DEV_MM_UNMET AS DEV,
        VP.POS_LONGL_UNMET AS POS
    FROM
        ACECPGER_LTQ.PROC_MEDID_LAR_PERFIL VP
    INNER JOIN
        Historicos T2 ON VP.COD_IDENT_UNMET = T2.COD_IDENT_UNMET
    INNER JOIN 
        Producao DPUV ON DPUV.COD_IDENT_UNMET = T2.COD_IDENT_UNMET
    WHERE
        T2.DTH_ENTRD_EQPMT >= TO_TIMESTAMP('2023-08-01 00:00:00.000', 'YYYY-MM-DD HH24:MI:SS.FF3')
        AND DPUV.COD_CAMP_LTQ LIKE '3XX%'
        AND POS_LONGL_UNMET > 500
        AND POS_LONGL_UNMET < 45000
),
Calculos AS (
    SELECT
        HU.UM,
        HU.DTH_ENTRD_EQPMT,
        ROUND(AVG(HU.DEV), 2) AS DEV_MED_CAMB_SAIDA,
        MAX(HU.DEV) AS DEV_MAX_CAMB_SAIDA,
        MIN(HU.DEV) AS DEV_MIN_CAMB_SAIDA
    FROM HU
    GROUP BY
        HU.UM,
        HU.DTH_ENTRD_EQPMT
)


SELECT
    CAL.UM,
    CAL.DTH_ENTRD_EQPMT,
    CAL.DEV_MED_CAMB_SAIDA,
    CAL.DEV_MAX_CAMB_SAIDA,
    CAL.DEV_MIN_CAMB_SAIDA
FROM Calculos CAL
ORDER BY
    CAL.UM ASC,
    CAL.DTH_ENTRD_EQPMT ASC -- Adicionei ordenação também pela data para garantir resultados únicos
